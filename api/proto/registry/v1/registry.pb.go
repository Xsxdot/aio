// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.11.1
// source: registry/v1/registry.proto

package registryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ServiceInstance 服务实例信息
type ServiceInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // 服务实例唯一ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                   // 服务名称
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                                                             // 服务地址
	Protocol      string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`                                                                           // 协议类型
	Env           string                 `protobuf:"bytes,5,opt,name=env,proto3" json:"env,omitempty"`                                                                                     // 环境标识：all(所有环境)、dev(开发)、test(测试)、prod(生产)
	RegisterTime  int64                  `protobuf:"varint,6,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`                                              // 注册时间戳
	StartTime     int64                  `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                       // 启动时间戳
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 服务元数据
	Weight        int32                  `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`                                                                              // 负载均衡权重
	Status        string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`                                                                              // 服务状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInstance) Reset() {
	*x = ServiceInstance{}
	mi := &file_registry_v1_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstance) ProtoMessage() {}

func (x *ServiceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstance.ProtoReflect.Descriptor instead.
func (*ServiceInstance) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInstance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ServiceInstance) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServiceInstance) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ServiceInstance) GetRegisterTime() int64 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *ServiceInstance) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ServiceInstance) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ServiceInstance) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ServiceInstance) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 注册服务实例请求
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                   // 服务名称
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                                                             // 服务地址
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`                                                                           // 协议类型
	Env           string                 `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`                                                                                     // 环境标识：all(所有环境)、dev(开发)、test(测试)、prod(生产)
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 服务元数据
	Weight        int32                  `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`                                                                              // 负载均衡权重
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`                                                                               // 服务状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *RegisterRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *RegisterRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegisterRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RegisterRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 注册服务实例响应
type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instance      *ServiceInstance       `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"` // 注册的服务实例信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterResponse) GetInstance() *ServiceInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// 注销服务实例请求
type UnregisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // 服务实例ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterRequest) Reset() {
	*x = UnregisterRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRequest) ProtoMessage() {}

func (x *UnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRequest.ProtoReflect.Descriptor instead.
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{3}
}

func (x *UnregisterRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// 注销服务实例响应
type UnregisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 操作结果消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterResponse) Reset() {
	*x = UnregisterResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterResponse) ProtoMessage() {}

func (x *UnregisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterResponse.ProtoReflect.Descriptor instead.
func (*UnregisterResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{4}
}

func (x *UnregisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 续约服务实例请求
type RenewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // 服务实例ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewRequest) Reset() {
	*x = RenewRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewRequest) ProtoMessage() {}

func (x *RenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewRequest.ProtoReflect.Descriptor instead.
func (*RenewRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{5}
}

func (x *RenewRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// 续约服务实例响应
type RenewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 操作结果消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewResponse) Reset() {
	*x = RenewResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewResponse) ProtoMessage() {}

func (x *RenewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewResponse.ProtoReflect.Descriptor instead.
func (*RenewResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{6}
}

func (x *RenewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取单个服务实例请求
type GetServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // 服务实例ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceRequest) Reset() {
	*x = GetServiceRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRequest) ProtoMessage() {}

func (x *GetServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{7}
}

func (x *GetServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// 获取单个服务实例响应
type GetServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instance      *ServiceInstance       `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"` // 服务实例信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceResponse) Reset() {
	*x = GetServiceResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceResponse) ProtoMessage() {}

func (x *GetServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceResponse.ProtoReflect.Descriptor instead.
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{8}
}

func (x *GetServiceResponse) GetInstance() *ServiceInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// 列出所有服务名称请求
type ListServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{9}
}

// 列出所有服务名称响应
type ListServicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []string               `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"` // 服务名称列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{10}
}

func (x *ListServicesResponse) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

// 发现服务实例列表请求
type DiscoverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"` // 服务名称
	Env           string                 `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`                                    // 环境标识：all(所有环境)、dev(开发)、test(测试)、prod(生产)，空值返回所有
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                              // 过滤状态（可选）
	Protocol      string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`                          // 过滤协议（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverRequest) Reset() {
	*x = DiscoverRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverRequest) ProtoMessage() {}

func (x *DiscoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverRequest.ProtoReflect.Descriptor instead.
func (*DiscoverRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{11}
}

func (x *DiscoverRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *DiscoverRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *DiscoverRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DiscoverRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// 发现服务实例列表响应
type DiscoverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instances     []*ServiceInstance     `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"` // 服务实例列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverResponse) Reset() {
	*x = DiscoverResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverResponse) ProtoMessage() {}

func (x *DiscoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverResponse.ProtoReflect.Descriptor instead.
func (*DiscoverResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{12}
}

func (x *DiscoverResponse) GetInstances() []*ServiceInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

// 检查服务健康状态请求
type CheckHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // 服务实例ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckHealthRequest) Reset() {
	*x = CheckHealthRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthRequest) ProtoMessage() {}

func (x *CheckHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthRequest.ProtoReflect.Descriptor instead.
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{13}
}

func (x *CheckHealthRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// 检查服务健康状态响应
type CheckHealthResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ServiceId        string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`                      // 服务实例ID
	ServiceName      string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`                // 服务名称
	Status           string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                             // 服务状态
	Healthy          bool                   `protobuf:"varint,4,opt,name=healthy,proto3" json:"healthy,omitempty"`                                          // 是否健康
	Uptime           string                 `protobuf:"bytes,5,opt,name=uptime,proto3" json:"uptime,omitempty"`                                             // 运行时长
	RegisterDuration string                 `protobuf:"bytes,6,opt,name=register_duration,json=registerDuration,proto3" json:"register_duration,omitempty"` // 注册时长
	LastCheck        int64                  `protobuf:"varint,7,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`                     // 最后检查时间（Unix时间戳）
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CheckHealthResponse) Reset() {
	*x = CheckHealthResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthResponse) ProtoMessage() {}

func (x *CheckHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthResponse.ProtoReflect.Descriptor instead.
func (*CheckHealthResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{14}
}

func (x *CheckHealthResponse) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CheckHealthResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CheckHealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CheckHealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *CheckHealthResponse) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *CheckHealthResponse) GetRegisterDuration() string {
	if x != nil {
		return x.RegisterDuration
	}
	return ""
}

func (x *CheckHealthResponse) GetLastCheck() int64 {
	if x != nil {
		return x.LastCheck
	}
	return 0
}

// 获取注册中心统计信息请求
type GetStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{15}
}

// 获取注册中心统计信息响应
type GetStatsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalServices      int32                  `protobuf:"varint,1,opt,name=total_services,json=totalServices,proto3" json:"total_services,omitempty"`                                                                        // 总服务数
	TotalInstances     int32                  `protobuf:"varint,2,opt,name=total_instances,json=totalInstances,proto3" json:"total_instances,omitempty"`                                                                     // 总实例数
	HealthyInstances   int32                  `protobuf:"varint,3,opt,name=healthy_instances,json=healthyInstances,proto3" json:"healthy_instances,omitempty"`                                                               // 健康实例数
	UnhealthyInstances int32                  `protobuf:"varint,4,opt,name=unhealthy_instances,json=unhealthyInstances,proto3" json:"unhealthy_instances,omitempty"`                                                         // 不健康实例数
	ServiceStats       map[string]int32       `protobuf:"bytes,5,rep,name=service_stats,json=serviceStats,proto3" json:"service_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 各服务实例统计
	Timestamp          int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                                                     // 统计时间（Unix时间戳）
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{16}
}

func (x *GetStatsResponse) GetTotalServices() int32 {
	if x != nil {
		return x.TotalServices
	}
	return 0
}

func (x *GetStatsResponse) GetTotalInstances() int32 {
	if x != nil {
		return x.TotalInstances
	}
	return 0
}

func (x *GetStatsResponse) GetHealthyInstances() int32 {
	if x != nil {
		return x.HealthyInstances
	}
	return 0
}

func (x *GetStatsResponse) GetUnhealthyInstances() int32 {
	if x != nil {
		return x.UnhealthyInstances
	}
	return 0
}

func (x *GetStatsResponse) GetServiceStats() map[string]int32 {
	if x != nil {
		return x.ServiceStats
	}
	return nil
}

func (x *GetStatsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 获取指定服务的统计信息请求
type GetServiceStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"` // 服务名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceStatsRequest) Reset() {
	*x = GetServiceStatsRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceStatsRequest) ProtoMessage() {}

func (x *GetServiceStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceStatsRequest.ProtoReflect.Descriptor instead.
func (*GetServiceStatsRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{17}
}

func (x *GetServiceStatsRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// 获取指定服务的统计信息响应
type GetServiceStatsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ServiceName        string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`                                                     // 服务名称
	TotalInstances     int32                  `protobuf:"varint,2,opt,name=total_instances,json=totalInstances,proto3" json:"total_instances,omitempty"`                                           // 总实例数
	HealthyInstances   int32                  `protobuf:"varint,3,opt,name=healthy_instances,json=healthyInstances,proto3" json:"healthy_instances,omitempty"`                                     // 健康实例数
	UnhealthyInstances int32                  `protobuf:"varint,4,opt,name=unhealthy_instances,json=unhealthyInstances,proto3" json:"unhealthy_instances,omitempty"`                               // 不健康实例数
	Protocols          map[string]int32       `protobuf:"bytes,5,rep,name=protocols,proto3" json:"protocols,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 协议分布
	Statuses           map[string]int32       `protobuf:"bytes,6,rep,name=statuses,proto3" json:"statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`   // 状态分布
	Instances          []*ServiceInstance     `protobuf:"bytes,7,rep,name=instances,proto3" json:"instances,omitempty"`                                                                            // 所有实例列表
	Timestamp          int64                  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                           // 统计时间（Unix时间戳）
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetServiceStatsResponse) Reset() {
	*x = GetServiceStatsResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceStatsResponse) ProtoMessage() {}

func (x *GetServiceStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceStatsResponse.ProtoReflect.Descriptor instead.
func (*GetServiceStatsResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{18}
}

func (x *GetServiceStatsResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetServiceStatsResponse) GetTotalInstances() int32 {
	if x != nil {
		return x.TotalInstances
	}
	return 0
}

func (x *GetServiceStatsResponse) GetHealthyInstances() int32 {
	if x != nil {
		return x.HealthyInstances
	}
	return 0
}

func (x *GetServiceStatsResponse) GetUnhealthyInstances() int32 {
	if x != nil {
		return x.UnhealthyInstances
	}
	return 0
}

func (x *GetServiceStatsResponse) GetProtocols() map[string]int32 {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *GetServiceStatsResponse) GetStatuses() map[string]int32 {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *GetServiceStatsResponse) GetInstances() []*ServiceInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *GetServiceStatsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 管理员获取所有服务详细信息请求
type GetAllServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllServicesRequest) Reset() {
	*x = GetAllServicesRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllServicesRequest) ProtoMessage() {}

func (x *GetAllServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllServicesRequest.ProtoReflect.Descriptor instead.
func (*GetAllServicesRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{19}
}

// 管理员获取所有服务详细信息响应
type GetAllServicesResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Services      map[string]*ServiceInstanceList `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 服务名称到实例列表的映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllServicesResponse) Reset() {
	*x = GetAllServicesResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllServicesResponse) ProtoMessage() {}

func (x *GetAllServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllServicesResponse.ProtoReflect.Descriptor instead.
func (*GetAllServicesResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{20}
}

func (x *GetAllServicesResponse) GetServices() map[string]*ServiceInstanceList {
	if x != nil {
		return x.Services
	}
	return nil
}

// 服务实例列表
type ServiceInstanceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instances     []*ServiceInstance     `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"` // 实例列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInstanceList) Reset() {
	*x = ServiceInstanceList{}
	mi := &file_registry_v1_registry_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInstanceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstanceList) ProtoMessage() {}

func (x *ServiceInstanceList) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstanceList.ProtoReflect.Descriptor instead.
func (*ServiceInstanceList) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{21}
}

func (x *ServiceInstanceList) GetInstances() []*ServiceInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

// 管理员删除指定服务的所有实例请求
type RemoveAllServiceInstancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"` // 服务名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAllServiceInstancesRequest) Reset() {
	*x = RemoveAllServiceInstancesRequest{}
	mi := &file_registry_v1_registry_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAllServiceInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAllServiceInstancesRequest) ProtoMessage() {}

func (x *RemoveAllServiceInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAllServiceInstancesRequest.ProtoReflect.Descriptor instead.
func (*RemoveAllServiceInstancesRequest) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveAllServiceInstancesRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// 管理员删除指定服务的所有实例响应
type RemoveAllServiceInstancesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceName    string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`           // 服务名称
	TotalInstances int32                  `protobuf:"varint,2,opt,name=total_instances,json=totalInstances,proto3" json:"total_instances,omitempty"` // 总实例数
	RemovedCount   int32                  `protobuf:"varint,3,opt,name=removed_count,json=removedCount,proto3" json:"removed_count,omitempty"`       // 删除成功数量
	Errors         []string               `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`                                        // 错误列表
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RemoveAllServiceInstancesResponse) Reset() {
	*x = RemoveAllServiceInstancesResponse{}
	mi := &file_registry_v1_registry_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAllServiceInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAllServiceInstancesResponse) ProtoMessage() {}

func (x *RemoveAllServiceInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_v1_registry_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAllServiceInstancesResponse.ProtoReflect.Descriptor instead.
func (*RemoveAllServiceInstancesResponse) Descriptor() ([]byte, []int) {
	return file_registry_v1_registry_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveAllServiceInstancesResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RemoveAllServiceInstancesResponse) GetTotalInstances() int32 {
	if x != nil {
		return x.TotalInstances
	}
	return 0
}

func (x *RemoveAllServiceInstancesResponse) GetRemovedCount() int32 {
	if x != nil {
		return x.RemovedCount
	}
	return 0
}

func (x *RemoveAllServiceInstancesResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_registry_v1_registry_proto protoreflect.FileDescriptor

const file_registry_v1_registry_proto_rawDesc = "" +
	"\n" +
	"\x1aregistry/v1/registry.proto\x12\vregistry.v1\"\xf6\x02\n" +
	"\x0fServiceInstance\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12\x10\n" +
	"\x03env\x18\x05 \x01(\tR\x03env\x12#\n" +
	"\rregister_time\x18\x06 \x01(\x03R\fregisterTime\x12\x1d\n" +
	"\n" +
	"start_time\x18\a \x01(\x03R\tstartTime\x12F\n" +
	"\bmetadata\x18\b \x03(\v2*.registry.v1.ServiceInstance.MetadataEntryR\bmetadata\x12\x16\n" +
	"\x06weight\x18\t \x01(\x05R\x06weight\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x02\n" +
	"\x0fRegisterRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x10\n" +
	"\x03env\x18\x04 \x01(\tR\x03env\x12F\n" +
	"\bmetadata\x18\x05 \x03(\v2*.registry.v1.RegisterRequest.MetadataEntryR\bmetadata\x12\x16\n" +
	"\x06weight\x18\x06 \x01(\x05R\x06weight\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\x10RegisterResponse\x128\n" +
	"\binstance\x18\x01 \x01(\v2\x1c.registry.v1.ServiceInstanceR\binstance\"2\n" +
	"\x11UnregisterRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\".\n" +
	"\x12UnregisterResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"-\n" +
	"\fRenewRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\")\n" +
	"\rRenewResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"2\n" +
	"\x11GetServiceRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\"N\n" +
	"\x12GetServiceResponse\x128\n" +
	"\binstance\x18\x01 \x01(\v2\x1c.registry.v1.ServiceInstanceR\binstance\"\x15\n" +
	"\x13ListServicesRequest\"2\n" +
	"\x14ListServicesResponse\x12\x1a\n" +
	"\bservices\x18\x01 \x03(\tR\bservices\"z\n" +
	"\x0fDiscoverRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x10\n" +
	"\x03env\x18\x02 \x01(\tR\x03env\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\"N\n" +
	"\x10DiscoverResponse\x12:\n" +
	"\tinstances\x18\x01 \x03(\v2\x1c.registry.v1.ServiceInstanceR\tinstances\"3\n" +
	"\x12CheckHealthRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\"\xed\x01\n" +
	"\x13CheckHealthResponse\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\ahealthy\x18\x04 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06uptime\x18\x05 \x01(\tR\x06uptime\x12+\n" +
	"\x11register_duration\x18\x06 \x01(\tR\x10registerDuration\x12\x1d\n" +
	"\n" +
	"last_check\x18\a \x01(\x03R\tlastCheck\"\x11\n" +
	"\x0fGetStatsRequest\"\xf5\x02\n" +
	"\x10GetStatsResponse\x12%\n" +
	"\x0etotal_services\x18\x01 \x01(\x05R\rtotalServices\x12'\n" +
	"\x0ftotal_instances\x18\x02 \x01(\x05R\x0etotalInstances\x12+\n" +
	"\x11healthy_instances\x18\x03 \x01(\x05R\x10healthyInstances\x12/\n" +
	"\x13unhealthy_instances\x18\x04 \x01(\x05R\x12unhealthyInstances\x12T\n" +
	"\rservice_stats\x18\x05 \x03(\v2/.registry.v1.GetStatsResponse.ServiceStatsEntryR\fserviceStats\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x1a?\n" +
	"\x11ServiceStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\";\n" +
	"\x16GetServiceStatsRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\"\xbb\x04\n" +
	"\x17GetServiceStatsResponse\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12'\n" +
	"\x0ftotal_instances\x18\x02 \x01(\x05R\x0etotalInstances\x12+\n" +
	"\x11healthy_instances\x18\x03 \x01(\x05R\x10healthyInstances\x12/\n" +
	"\x13unhealthy_instances\x18\x04 \x01(\x05R\x12unhealthyInstances\x12Q\n" +
	"\tprotocols\x18\x05 \x03(\v23.registry.v1.GetServiceStatsResponse.ProtocolsEntryR\tprotocols\x12N\n" +
	"\bstatuses\x18\x06 \x03(\v22.registry.v1.GetServiceStatsResponse.StatusesEntryR\bstatuses\x12:\n" +
	"\tinstances\x18\a \x03(\v2\x1c.registry.v1.ServiceInstanceR\tinstances\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\x03R\ttimestamp\x1a<\n" +
	"\x0eProtocolsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a;\n" +
	"\rStatusesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x17\n" +
	"\x15GetAllServicesRequest\"\xc6\x01\n" +
	"\x16GetAllServicesResponse\x12M\n" +
	"\bservices\x18\x01 \x03(\v21.registry.v1.GetAllServicesResponse.ServicesEntryR\bservices\x1a]\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .registry.v1.ServiceInstanceListR\x05value:\x028\x01\"Q\n" +
	"\x13ServiceInstanceList\x12:\n" +
	"\tinstances\x18\x01 \x03(\v2\x1c.registry.v1.ServiceInstanceR\tinstances\"E\n" +
	" RemoveAllServiceInstancesRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\"\xac\x01\n" +
	"!RemoveAllServiceInstancesResponse\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12'\n" +
	"\x0ftotal_instances\x18\x02 \x01(\x05R\x0etotalInstances\x12#\n" +
	"\rremoved_count\x18\x03 \x01(\x05R\fremovedCount\x12\x16\n" +
	"\x06errors\x18\x04 \x03(\tR\x06errors2\xa6\a\n" +
	"\x0fRegistryService\x12G\n" +
	"\bRegister\x12\x1c.registry.v1.RegisterRequest\x1a\x1d.registry.v1.RegisterResponse\x12M\n" +
	"\n" +
	"Unregister\x12\x1e.registry.v1.UnregisterRequest\x1a\x1f.registry.v1.UnregisterResponse\x12>\n" +
	"\x05Renew\x12\x19.registry.v1.RenewRequest\x1a\x1a.registry.v1.RenewResponse\x12M\n" +
	"\n" +
	"GetService\x12\x1e.registry.v1.GetServiceRequest\x1a\x1f.registry.v1.GetServiceResponse\x12S\n" +
	"\fListServices\x12 .registry.v1.ListServicesRequest\x1a!.registry.v1.ListServicesResponse\x12G\n" +
	"\bDiscover\x12\x1c.registry.v1.DiscoverRequest\x1a\x1d.registry.v1.DiscoverResponse\x12P\n" +
	"\vCheckHealth\x12\x1f.registry.v1.CheckHealthRequest\x1a .registry.v1.CheckHealthResponse\x12G\n" +
	"\bGetStats\x12\x1c.registry.v1.GetStatsRequest\x1a\x1d.registry.v1.GetStatsResponse\x12\\\n" +
	"\x0fGetServiceStats\x12#.registry.v1.GetServiceStatsRequest\x1a$.registry.v1.GetServiceStatsResponse\x12Y\n" +
	"\x0eGetAllServices\x12\".registry.v1.GetAllServicesRequest\x1a#.registry.v1.GetAllServicesResponse\x12z\n" +
	"\x19RemoveAllServiceInstances\x12-.registry.v1.RemoveAllServiceInstancesRequest\x1a..registry.v1.RemoveAllServiceInstancesResponseB8Z6github.com/xsxdot/aio/api/proto/registry/v1;registryv1b\x06proto3"

var (
	file_registry_v1_registry_proto_rawDescOnce sync.Once
	file_registry_v1_registry_proto_rawDescData []byte
)

func file_registry_v1_registry_proto_rawDescGZIP() []byte {
	file_registry_v1_registry_proto_rawDescOnce.Do(func() {
		file_registry_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_v1_registry_proto_rawDesc), len(file_registry_v1_registry_proto_rawDesc)))
	})
	return file_registry_v1_registry_proto_rawDescData
}

var file_registry_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_registry_v1_registry_proto_goTypes = []any{
	(*ServiceInstance)(nil),                   // 0: registry.v1.ServiceInstance
	(*RegisterRequest)(nil),                   // 1: registry.v1.RegisterRequest
	(*RegisterResponse)(nil),                  // 2: registry.v1.RegisterResponse
	(*UnregisterRequest)(nil),                 // 3: registry.v1.UnregisterRequest
	(*UnregisterResponse)(nil),                // 4: registry.v1.UnregisterResponse
	(*RenewRequest)(nil),                      // 5: registry.v1.RenewRequest
	(*RenewResponse)(nil),                     // 6: registry.v1.RenewResponse
	(*GetServiceRequest)(nil),                 // 7: registry.v1.GetServiceRequest
	(*GetServiceResponse)(nil),                // 8: registry.v1.GetServiceResponse
	(*ListServicesRequest)(nil),               // 9: registry.v1.ListServicesRequest
	(*ListServicesResponse)(nil),              // 10: registry.v1.ListServicesResponse
	(*DiscoverRequest)(nil),                   // 11: registry.v1.DiscoverRequest
	(*DiscoverResponse)(nil),                  // 12: registry.v1.DiscoverResponse
	(*CheckHealthRequest)(nil),                // 13: registry.v1.CheckHealthRequest
	(*CheckHealthResponse)(nil),               // 14: registry.v1.CheckHealthResponse
	(*GetStatsRequest)(nil),                   // 15: registry.v1.GetStatsRequest
	(*GetStatsResponse)(nil),                  // 16: registry.v1.GetStatsResponse
	(*GetServiceStatsRequest)(nil),            // 17: registry.v1.GetServiceStatsRequest
	(*GetServiceStatsResponse)(nil),           // 18: registry.v1.GetServiceStatsResponse
	(*GetAllServicesRequest)(nil),             // 19: registry.v1.GetAllServicesRequest
	(*GetAllServicesResponse)(nil),            // 20: registry.v1.GetAllServicesResponse
	(*ServiceInstanceList)(nil),               // 21: registry.v1.ServiceInstanceList
	(*RemoveAllServiceInstancesRequest)(nil),  // 22: registry.v1.RemoveAllServiceInstancesRequest
	(*RemoveAllServiceInstancesResponse)(nil), // 23: registry.v1.RemoveAllServiceInstancesResponse
	nil, // 24: registry.v1.ServiceInstance.MetadataEntry
	nil, // 25: registry.v1.RegisterRequest.MetadataEntry
	nil, // 26: registry.v1.GetStatsResponse.ServiceStatsEntry
	nil, // 27: registry.v1.GetServiceStatsResponse.ProtocolsEntry
	nil, // 28: registry.v1.GetServiceStatsResponse.StatusesEntry
	nil, // 29: registry.v1.GetAllServicesResponse.ServicesEntry
}
var file_registry_v1_registry_proto_depIdxs = []int32{
	24, // 0: registry.v1.ServiceInstance.metadata:type_name -> registry.v1.ServiceInstance.MetadataEntry
	25, // 1: registry.v1.RegisterRequest.metadata:type_name -> registry.v1.RegisterRequest.MetadataEntry
	0,  // 2: registry.v1.RegisterResponse.instance:type_name -> registry.v1.ServiceInstance
	0,  // 3: registry.v1.GetServiceResponse.instance:type_name -> registry.v1.ServiceInstance
	0,  // 4: registry.v1.DiscoverResponse.instances:type_name -> registry.v1.ServiceInstance
	26, // 5: registry.v1.GetStatsResponse.service_stats:type_name -> registry.v1.GetStatsResponse.ServiceStatsEntry
	27, // 6: registry.v1.GetServiceStatsResponse.protocols:type_name -> registry.v1.GetServiceStatsResponse.ProtocolsEntry
	28, // 7: registry.v1.GetServiceStatsResponse.statuses:type_name -> registry.v1.GetServiceStatsResponse.StatusesEntry
	0,  // 8: registry.v1.GetServiceStatsResponse.instances:type_name -> registry.v1.ServiceInstance
	29, // 9: registry.v1.GetAllServicesResponse.services:type_name -> registry.v1.GetAllServicesResponse.ServicesEntry
	0,  // 10: registry.v1.ServiceInstanceList.instances:type_name -> registry.v1.ServiceInstance
	21, // 11: registry.v1.GetAllServicesResponse.ServicesEntry.value:type_name -> registry.v1.ServiceInstanceList
	1,  // 12: registry.v1.RegistryService.Register:input_type -> registry.v1.RegisterRequest
	3,  // 13: registry.v1.RegistryService.Unregister:input_type -> registry.v1.UnregisterRequest
	5,  // 14: registry.v1.RegistryService.Renew:input_type -> registry.v1.RenewRequest
	7,  // 15: registry.v1.RegistryService.GetService:input_type -> registry.v1.GetServiceRequest
	9,  // 16: registry.v1.RegistryService.ListServices:input_type -> registry.v1.ListServicesRequest
	11, // 17: registry.v1.RegistryService.Discover:input_type -> registry.v1.DiscoverRequest
	13, // 18: registry.v1.RegistryService.CheckHealth:input_type -> registry.v1.CheckHealthRequest
	15, // 19: registry.v1.RegistryService.GetStats:input_type -> registry.v1.GetStatsRequest
	17, // 20: registry.v1.RegistryService.GetServiceStats:input_type -> registry.v1.GetServiceStatsRequest
	19, // 21: registry.v1.RegistryService.GetAllServices:input_type -> registry.v1.GetAllServicesRequest
	22, // 22: registry.v1.RegistryService.RemoveAllServiceInstances:input_type -> registry.v1.RemoveAllServiceInstancesRequest
	2,  // 23: registry.v1.RegistryService.Register:output_type -> registry.v1.RegisterResponse
	4,  // 24: registry.v1.RegistryService.Unregister:output_type -> registry.v1.UnregisterResponse
	6,  // 25: registry.v1.RegistryService.Renew:output_type -> registry.v1.RenewResponse
	8,  // 26: registry.v1.RegistryService.GetService:output_type -> registry.v1.GetServiceResponse
	10, // 27: registry.v1.RegistryService.ListServices:output_type -> registry.v1.ListServicesResponse
	12, // 28: registry.v1.RegistryService.Discover:output_type -> registry.v1.DiscoverResponse
	14, // 29: registry.v1.RegistryService.CheckHealth:output_type -> registry.v1.CheckHealthResponse
	16, // 30: registry.v1.RegistryService.GetStats:output_type -> registry.v1.GetStatsResponse
	18, // 31: registry.v1.RegistryService.GetServiceStats:output_type -> registry.v1.GetServiceStatsResponse
	20, // 32: registry.v1.RegistryService.GetAllServices:output_type -> registry.v1.GetAllServicesResponse
	23, // 33: registry.v1.RegistryService.RemoveAllServiceInstances:output_type -> registry.v1.RemoveAllServiceInstancesResponse
	23, // [23:34] is the sub-list for method output_type
	12, // [12:23] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_registry_v1_registry_proto_init() }
func file_registry_v1_registry_proto_init() {
	if File_registry_v1_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_v1_registry_proto_rawDesc), len(file_registry_v1_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_v1_registry_proto_goTypes,
		DependencyIndexes: file_registry_v1_registry_proto_depIdxs,
		MessageInfos:      file_registry_v1_registry_proto_msgTypes,
	}.Build()
	File_registry_v1_registry_proto = out.File
	file_registry_v1_registry_proto_goTypes = nil
	file_registry_v1_registry_proto_depIdxs = nil
}
