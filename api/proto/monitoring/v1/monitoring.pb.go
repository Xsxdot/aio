// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.11.1
// source: monitoring/v1/monitoring.proto

package monitoringv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetricType 指标类型枚举
type MetricType int32

const (
	MetricType_METRIC_TYPE_UNSPECIFIED MetricType = 0
	MetricType_METRIC_TYPE_GAUGE       MetricType = 1 // 仪表盘类型指标
	MetricType_METRIC_TYPE_COUNTER     MetricType = 2 // 计数器类型指标
)

// Enum value maps for MetricType.
var (
	MetricType_name = map[int32]string{
		0: "METRIC_TYPE_UNSPECIFIED",
		1: "METRIC_TYPE_GAUGE",
		2: "METRIC_TYPE_COUNTER",
	}
	MetricType_value = map[string]int32{
		"METRIC_TYPE_UNSPECIFIED": 0,
		"METRIC_TYPE_GAUGE":       1,
		"METRIC_TYPE_COUNTER":     2,
	}
)

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}

func (x MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_monitoring_v1_monitoring_proto_enumTypes[0].Descriptor()
}

func (MetricType) Type() protoreflect.EnumType {
	return &file_monitoring_v1_monitoring_proto_enumTypes[0]
}

func (x MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricType.Descriptor instead.
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{0}
}

// MetricCategory 指标分类枚举
type MetricCategory int32

const (
	MetricCategory_METRIC_CATEGORY_UNSPECIFIED MetricCategory = 0
	MetricCategory_METRIC_CATEGORY_SERVER      MetricCategory = 1 // 服务器指标
	MetricCategory_METRIC_CATEGORY_APP         MetricCategory = 2 // 应用指标
	MetricCategory_METRIC_CATEGORY_API         MetricCategory = 3 // API指标
	MetricCategory_METRIC_CATEGORY_CUSTOM      MetricCategory = 4 // 自定义指标
)

// Enum value maps for MetricCategory.
var (
	MetricCategory_name = map[int32]string{
		0: "METRIC_CATEGORY_UNSPECIFIED",
		1: "METRIC_CATEGORY_SERVER",
		2: "METRIC_CATEGORY_APP",
		3: "METRIC_CATEGORY_API",
		4: "METRIC_CATEGORY_CUSTOM",
	}
	MetricCategory_value = map[string]int32{
		"METRIC_CATEGORY_UNSPECIFIED": 0,
		"METRIC_CATEGORY_SERVER":      1,
		"METRIC_CATEGORY_APP":         2,
		"METRIC_CATEGORY_API":         3,
		"METRIC_CATEGORY_CUSTOM":      4,
	}
)

func (x MetricCategory) Enum() *MetricCategory {
	p := new(MetricCategory)
	*p = x
	return p
}

func (x MetricCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_monitoring_v1_monitoring_proto_enumTypes[1].Descriptor()
}

func (MetricCategory) Type() protoreflect.EnumType {
	return &file_monitoring_v1_monitoring_proto_enumTypes[1]
}

func (x MetricCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricCategory.Descriptor instead.
func (MetricCategory) EnumDescriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{1}
}

// StorageNodeStatus 存储节点状态枚举
type StorageNodeStatus int32

const (
	StorageNodeStatus_STORAGE_NODE_STATUS_UNSPECIFIED StorageNodeStatus = 0
	StorageNodeStatus_STORAGE_NODE_STATUS_ONLINE      StorageNodeStatus = 1 // 节点在线
	StorageNodeStatus_STORAGE_NODE_STATUS_OFFLINE     StorageNodeStatus = 2 // 节点离线
	StorageNodeStatus_STORAGE_NODE_STATUS_REASSIGN    StorageNodeStatus = 3 // 需要重新分配
)

// Enum value maps for StorageNodeStatus.
var (
	StorageNodeStatus_name = map[int32]string{
		0: "STORAGE_NODE_STATUS_UNSPECIFIED",
		1: "STORAGE_NODE_STATUS_ONLINE",
		2: "STORAGE_NODE_STATUS_OFFLINE",
		3: "STORAGE_NODE_STATUS_REASSIGN",
	}
	StorageNodeStatus_value = map[string]int32{
		"STORAGE_NODE_STATUS_UNSPECIFIED": 0,
		"STORAGE_NODE_STATUS_ONLINE":      1,
		"STORAGE_NODE_STATUS_OFFLINE":     2,
		"STORAGE_NODE_STATUS_REASSIGN":    3,
	}
)

func (x StorageNodeStatus) Enum() *StorageNodeStatus {
	p := new(StorageNodeStatus)
	*p = x
	return p
}

func (x StorageNodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageNodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_monitoring_v1_monitoring_proto_enumTypes[2].Descriptor()
}

func (StorageNodeStatus) Type() protoreflect.EnumType {
	return &file_monitoring_v1_monitoring_proto_enumTypes[2]
}

func (x StorageNodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageNodeStatus.Descriptor instead.
func (StorageNodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{2}
}

// MetricPoint 表示一个统一的指标数据点
type MetricPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                    // 时间戳（Unix纳秒）
	MetricName    string                 `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`                                                 // 指标名称
	MetricType    MetricType             `protobuf:"varint,3,opt,name=metric_type,json=metricType,proto3,enum=monitoring.v1.MetricType" json:"metric_type,omitempty"`                  // 指标类型
	Value         float64                `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`                                                                           // 指标值
	Source        string                 `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`                                                                           // 数据来源
	Instance      string                 `protobuf:"bytes,6,opt,name=instance,proto3" json:"instance,omitempty"`                                                                       // 实例标识
	Category      MetricCategory         `protobuf:"varint,7,opt,name=category,proto3,enum=monitoring.v1.MetricCategory" json:"category,omitempty"`                                    // 指标分类
	Labels        map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 额外标签
	Unit          string                 `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"`                                                                               // 单位
	Description   string                 `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`                                                                // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricPoint) Reset() {
	*x = MetricPoint{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricPoint) ProtoMessage() {}

func (x *MetricPoint) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricPoint.ProtoReflect.Descriptor instead.
func (*MetricPoint) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *MetricPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MetricPoint) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *MetricPoint) GetMetricType() MetricType {
	if x != nil {
		return x.MetricType
	}
	return MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MetricPoint) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *MetricPoint) GetCategory() MetricCategory {
	if x != nil {
		return x.Category
	}
	return MetricCategory_METRIC_CATEGORY_UNSPECIFIED
}

func (x *MetricPoint) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricPoint) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MetricPoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// StorageNode 存储节点信息
type StorageNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                         // 节点ID
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                     // 节点地址
	Status        StorageNodeStatus      `protobuf:"varint,3,opt,name=status,proto3,enum=monitoring.v1.StorageNodeStatus" json:"status,omitempty"` // 节点状态
	ServiceCount  int32                  `protobuf:"varint,4,opt,name=service_count,json=serviceCount,proto3" json:"service_count,omitempty"`      // 分配的服务数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageNode) Reset() {
	*x = StorageNode{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageNode) ProtoMessage() {}

func (x *StorageNode) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageNode.ProtoReflect.Descriptor instead.
func (*StorageNode) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *StorageNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StorageNode) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StorageNode) GetStatus() StorageNodeStatus {
	if x != nil {
		return x.Status
	}
	return StorageNodeStatus_STORAGE_NODE_STATUS_UNSPECIFIED
}

func (x *StorageNode) GetServiceCount() int32 {
	if x != nil {
		return x.ServiceCount
	}
	return 0
}

// StoreMetricPointsRequest 存储指标数据点请求
type StoreMetricPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MetricPoint         `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreMetricPointsRequest) Reset() {
	*x = StoreMetricPointsRequest{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreMetricPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreMetricPointsRequest) ProtoMessage() {}

func (x *StoreMetricPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreMetricPointsRequest.ProtoReflect.Descriptor instead.
func (*StoreMetricPointsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *StoreMetricPointsRequest) GetPoints() []*MetricPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

// StoreMetricPointsResponse 存储指标数据点响应
type StoreMetricPointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreMetricPointsResponse) Reset() {
	*x = StoreMetricPointsResponse{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreMetricPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreMetricPointsResponse) ProtoMessage() {}

func (x *StoreMetricPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreMetricPointsResponse.ProtoReflect.Descriptor instead.
func (*StoreMetricPointsResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *StoreMetricPointsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreMetricPointsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// StoreMetricProviderRequest 存储MetricProvider数据请求
type StoreMetricProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MetricPoint         `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"` // 通过ToMetricPoints()方法转换的数据点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreMetricProviderRequest) Reset() {
	*x = StoreMetricProviderRequest{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreMetricProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreMetricProviderRequest) ProtoMessage() {}

func (x *StoreMetricProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreMetricProviderRequest.ProtoReflect.Descriptor instead.
func (*StoreMetricProviderRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *StoreMetricProviderRequest) GetPoints() []*MetricPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

// StoreMetricProviderResponse 存储MetricProvider数据响应
type StoreMetricProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreMetricProviderResponse) Reset() {
	*x = StoreMetricProviderResponse{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreMetricProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreMetricProviderResponse) ProtoMessage() {}

func (x *StoreMetricProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreMetricProviderResponse.ProtoReflect.Descriptor instead.
func (*StoreMetricProviderResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *StoreMetricProviderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreMetricProviderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// QueryMetricPointsRequest 查询指标数据点请求
type QueryMetricPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                      // 开始时间（Unix纳秒）
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                            // 结束时间（Unix纳秒）
	MetricNames   []string               `protobuf:"bytes,3,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"`                                                                                 // 指标名称列表
	Categories    []MetricCategory       `protobuf:"varint,4,rep,packed,name=categories,proto3,enum=monitoring.v1.MetricCategory" json:"categories,omitempty"`                                                            // 指标分类列表
	Sources       []string               `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`                                                                                                            // 数据来源列表
	Instances     []string               `protobuf:"bytes,6,rep,name=instances,proto3" json:"instances,omitempty"`                                                                                                        // 实例列表
	LabelMatchers map[string]string      `protobuf:"bytes,7,rep,name=label_matchers,json=labelMatchers,proto3" json:"label_matchers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 标签匹配器
	Aggregation   string                 `protobuf:"bytes,8,opt,name=aggregation,proto3" json:"aggregation,omitempty"`                                                                                                    // 聚合方式
	Interval      string                 `protobuf:"bytes,9,opt,name=interval,proto3" json:"interval,omitempty"`                                                                                                          // 聚合间隔
	Limit         int32                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`                                                                                                              // 限制数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMetricPointsRequest) Reset() {
	*x = QueryMetricPointsRequest{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMetricPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetricPointsRequest) ProtoMessage() {}

func (x *QueryMetricPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMetricPointsRequest.ProtoReflect.Descriptor instead.
func (*QueryMetricPointsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *QueryMetricPointsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryMetricPointsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryMetricPointsRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

func (x *QueryMetricPointsRequest) GetCategories() []MetricCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *QueryMetricPointsRequest) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *QueryMetricPointsRequest) GetInstances() []string {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *QueryMetricPointsRequest) GetLabelMatchers() map[string]string {
	if x != nil {
		return x.LabelMatchers
	}
	return nil
}

func (x *QueryMetricPointsRequest) GetAggregation() string {
	if x != nil {
		return x.Aggregation
	}
	return ""
}

func (x *QueryMetricPointsRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *QueryMetricPointsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// QueryMetricPointsResponse 查询指标数据点响应
type QueryMetricPointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MetricPoint         `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMetricPointsResponse) Reset() {
	*x = QueryMetricPointsResponse{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMetricPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetricPointsResponse) ProtoMessage() {}

func (x *QueryMetricPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMetricPointsResponse.ProtoReflect.Descriptor instead.
func (*QueryMetricPointsResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *QueryMetricPointsResponse) GetPoints() []*MetricPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

// QueryTimeSeriesRequest 查询时间序列数据请求
type QueryTimeSeriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                      // 开始时间（Unix纳秒）
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                            // 结束时间（Unix纳秒）
	MetricNames   []string               `protobuf:"bytes,3,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"`                                                                                 // 指标名称列表
	Categories    []MetricCategory       `protobuf:"varint,4,rep,packed,name=categories,proto3,enum=monitoring.v1.MetricCategory" json:"categories,omitempty"`                                                            // 指标分类列表
	Sources       []string               `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`                                                                                                            // 数据来源列表
	Instances     []string               `protobuf:"bytes,6,rep,name=instances,proto3" json:"instances,omitempty"`                                                                                                        // 实例列表
	LabelMatchers map[string]string      `protobuf:"bytes,7,rep,name=label_matchers,json=labelMatchers,proto3" json:"label_matchers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 标签匹配器
	Aggregation   string                 `protobuf:"bytes,8,opt,name=aggregation,proto3" json:"aggregation,omitempty"`                                                                                                    // 聚合方式
	Interval      string                 `protobuf:"bytes,9,opt,name=interval,proto3" json:"interval,omitempty"`                                                                                                          // 聚合间隔
	Limit         int32                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`                                                                                                              // 限制数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTimeSeriesRequest) Reset() {
	*x = QueryTimeSeriesRequest{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTimeSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTimeSeriesRequest) ProtoMessage() {}

func (x *QueryTimeSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTimeSeriesRequest.ProtoReflect.Descriptor instead.
func (*QueryTimeSeriesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{8}
}

func (x *QueryTimeSeriesRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryTimeSeriesRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryTimeSeriesRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

func (x *QueryTimeSeriesRequest) GetCategories() []MetricCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *QueryTimeSeriesRequest) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *QueryTimeSeriesRequest) GetInstances() []string {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *QueryTimeSeriesRequest) GetLabelMatchers() map[string]string {
	if x != nil {
		return x.LabelMatchers
	}
	return nil
}

func (x *QueryTimeSeriesRequest) GetAggregation() string {
	if x != nil {
		return x.Aggregation
	}
	return ""
}

func (x *QueryTimeSeriesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *QueryTimeSeriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// TimeSeriesPoint 时间序列中的一个点
type TimeSeriesPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 时间戳（Unix纳秒）
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeriesPoint) Reset() {
	*x = TimeSeriesPoint{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesPoint) ProtoMessage() {}

func (x *TimeSeriesPoint) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesPoint.ProtoReflect.Descriptor instead.
func (*TimeSeriesPoint) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{9}
}

func (x *TimeSeriesPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TimeSeriesPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// TimeSeries 指标的时间序列数据
type TimeSeries struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                               // 指标名称
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 标签
	Points        []*TimeSeriesPoint     `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty"`                                                                           // 数据点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{10}
}

func (x *TimeSeries) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TimeSeries) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TimeSeries) GetPoints() []*TimeSeriesPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

// QueryTimeSeriesResponse 查询时间序列数据响应
type QueryTimeSeriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Series        []*TimeSeries          `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTimeSeriesResponse) Reset() {
	*x = QueryTimeSeriesResponse{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTimeSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTimeSeriesResponse) ProtoMessage() {}

func (x *QueryTimeSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTimeSeriesResponse.ProtoReflect.Descriptor instead.
func (*QueryTimeSeriesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{11}
}

func (x *QueryTimeSeriesResponse) GetSeries() []*TimeSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

// GetStorageNodeRequest 获取存储节点请求
type GetStorageNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`        // 服务名称
	ForceReassign bool                   `protobuf:"varint,2,opt,name=force_reassign,json=forceReassign,proto3" json:"force_reassign,omitempty"` // 是否强制重新分配节点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStorageNodeRequest) Reset() {
	*x = GetStorageNodeRequest{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageNodeRequest) ProtoMessage() {}

func (x *GetStorageNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageNodeRequest.ProtoReflect.Descriptor instead.
func (*GetStorageNodeRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{12}
}

func (x *GetStorageNodeRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetStorageNodeRequest) GetForceReassign() bool {
	if x != nil {
		return x.ForceReassign
	}
	return false
}

// GetStorageNodeResponse 获取存储节点响应
type GetStorageNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *StorageNode           `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`        // 分配的存储节点
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`  // 操作消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStorageNodeResponse) Reset() {
	*x = GetStorageNodeResponse{}
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageNodeResponse) ProtoMessage() {}

func (x *GetStorageNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_v1_monitoring_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageNodeResponse.ProtoReflect.Descriptor instead.
func (*GetStorageNodeResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_v1_monitoring_proto_rawDescGZIP(), []int{13}
}

func (x *GetStorageNodeResponse) GetNode() *StorageNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetStorageNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetStorageNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_monitoring_v1_monitoring_proto protoreflect.FileDescriptor

const file_monitoring_v1_monitoring_proto_rawDesc = "" +
	"\n" +
	"\x1emonitoring/v1/monitoring.proto\x12\rmonitoring.v1\"\xbe\x03\n" +
	"\vMetricPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1f\n" +
	"\vmetric_name\x18\x02 \x01(\tR\n" +
	"metricName\x12:\n" +
	"\vmetric_type\x18\x03 \x01(\x0e2\x19.monitoring.v1.MetricTypeR\n" +
	"metricType\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x01R\x05value\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\x12\x1a\n" +
	"\binstance\x18\x06 \x01(\tR\binstance\x129\n" +
	"\bcategory\x18\a \x01(\x0e2\x1d.monitoring.v1.MetricCategoryR\bcategory\x12>\n" +
	"\x06labels\x18\b \x03(\v2&.monitoring.v1.MetricPoint.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04unit\x18\t \x01(\tR\x04unit\x12 \n" +
	"\vdescription\x18\n" +
	" \x01(\tR\vdescription\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\vStorageNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x128\n" +
	"\x06status\x18\x03 \x01(\x0e2 .monitoring.v1.StorageNodeStatusR\x06status\x12#\n" +
	"\rservice_count\x18\x04 \x01(\x05R\fserviceCount\"N\n" +
	"\x18StoreMetricPointsRequest\x122\n" +
	"\x06points\x18\x01 \x03(\v2\x1a.monitoring.v1.MetricPointR\x06points\"O\n" +
	"\x19StoreMetricPointsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"P\n" +
	"\x1aStoreMetricProviderRequest\x122\n" +
	"\x06points\x18\x01 \x03(\v2\x1a.monitoring.v1.MetricPointR\x06points\"Q\n" +
	"\x1bStoreMetricProviderResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xe7\x03\n" +
	"\x18QueryMetricPointsRequest\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12!\n" +
	"\fmetric_names\x18\x03 \x03(\tR\vmetricNames\x12=\n" +
	"\n" +
	"categories\x18\x04 \x03(\x0e2\x1d.monitoring.v1.MetricCategoryR\n" +
	"categories\x12\x18\n" +
	"\asources\x18\x05 \x03(\tR\asources\x12\x1c\n" +
	"\tinstances\x18\x06 \x03(\tR\tinstances\x12a\n" +
	"\x0elabel_matchers\x18\a \x03(\v2:.monitoring.v1.QueryMetricPointsRequest.LabelMatchersEntryR\rlabelMatchers\x12 \n" +
	"\vaggregation\x18\b \x01(\tR\vaggregation\x12\x1a\n" +
	"\binterval\x18\t \x01(\tR\binterval\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x05R\x05limit\x1a@\n" +
	"\x12LabelMatchersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"O\n" +
	"\x19QueryMetricPointsResponse\x122\n" +
	"\x06points\x18\x01 \x03(\v2\x1a.monitoring.v1.MetricPointR\x06points\"\xe3\x03\n" +
	"\x16QueryTimeSeriesRequest\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12!\n" +
	"\fmetric_names\x18\x03 \x03(\tR\vmetricNames\x12=\n" +
	"\n" +
	"categories\x18\x04 \x03(\x0e2\x1d.monitoring.v1.MetricCategoryR\n" +
	"categories\x12\x18\n" +
	"\asources\x18\x05 \x03(\tR\asources\x12\x1c\n" +
	"\tinstances\x18\x06 \x03(\tR\tinstances\x12_\n" +
	"\x0elabel_matchers\x18\a \x03(\v28.monitoring.v1.QueryTimeSeriesRequest.LabelMatchersEntryR\rlabelMatchers\x12 \n" +
	"\vaggregation\x18\b \x01(\tR\vaggregation\x12\x1a\n" +
	"\binterval\x18\t \x01(\tR\binterval\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x05R\x05limit\x1a@\n" +
	"\x12LabelMatchersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"E\n" +
	"\x0fTimeSeriesPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"\xd2\x01\n" +
	"\n" +
	"TimeSeries\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12=\n" +
	"\x06labels\x18\x02 \x03(\v2%.monitoring.v1.TimeSeries.LabelsEntryR\x06labels\x126\n" +
	"\x06points\x18\x03 \x03(\v2\x1e.monitoring.v1.TimeSeriesPointR\x06points\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\x17QueryTimeSeriesResponse\x121\n" +
	"\x06series\x18\x01 \x03(\v2\x19.monitoring.v1.TimeSeriesR\x06series\"a\n" +
	"\x15GetStorageNodeRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12%\n" +
	"\x0eforce_reassign\x18\x02 \x01(\bR\rforceReassign\"|\n" +
	"\x16GetStorageNodeResponse\x12.\n" +
	"\x04node\x18\x01 \x01(\v2\x1a.monitoring.v1.StorageNodeR\x04node\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage*Y\n" +
	"\n" +
	"MetricType\x12\x1b\n" +
	"\x17METRIC_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11METRIC_TYPE_GAUGE\x10\x01\x12\x17\n" +
	"\x13METRIC_TYPE_COUNTER\x10\x02*\x9b\x01\n" +
	"\x0eMetricCategory\x12\x1f\n" +
	"\x1bMETRIC_CATEGORY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16METRIC_CATEGORY_SERVER\x10\x01\x12\x17\n" +
	"\x13METRIC_CATEGORY_APP\x10\x02\x12\x17\n" +
	"\x13METRIC_CATEGORY_API\x10\x03\x12\x1a\n" +
	"\x16METRIC_CATEGORY_CUSTOM\x10\x04*\x9b\x01\n" +
	"\x11StorageNodeStatus\x12#\n" +
	"\x1fSTORAGE_NODE_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aSTORAGE_NODE_STATUS_ONLINE\x10\x01\x12\x1f\n" +
	"\x1bSTORAGE_NODE_STATUS_OFFLINE\x10\x02\x12 \n" +
	"\x1cSTORAGE_NODE_STATUS_REASSIGN\x10\x032\x95\x04\n" +
	"\x14MetricStorageService\x12f\n" +
	"\x11StoreMetricPoints\x12'.monitoring.v1.StoreMetricPointsRequest\x1a(.monitoring.v1.StoreMetricPointsResponse\x12l\n" +
	"\x13StoreMetricProvider\x12).monitoring.v1.StoreMetricProviderRequest\x1a*.monitoring.v1.StoreMetricProviderResponse\x12f\n" +
	"\x11QueryMetricPoints\x12'.monitoring.v1.QueryMetricPointsRequest\x1a(.monitoring.v1.QueryMetricPointsResponse\x12`\n" +
	"\x0fQueryTimeSeries\x12%.monitoring.v1.QueryTimeSeriesRequest\x1a&.monitoring.v1.QueryTimeSeriesResponse\x12]\n" +
	"\x0eGetStorageNode\x12$.monitoring.v1.GetStorageNodeRequest\x1a%.monitoring.v1.GetStorageNodeResponseB<Z:github.com/xsxdot/aio/api/proto/monitoring/v1;monitoringv1b\x06proto3"

var (
	file_monitoring_v1_monitoring_proto_rawDescOnce sync.Once
	file_monitoring_v1_monitoring_proto_rawDescData []byte
)

func file_monitoring_v1_monitoring_proto_rawDescGZIP() []byte {
	file_monitoring_v1_monitoring_proto_rawDescOnce.Do(func() {
		file_monitoring_v1_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitoring_v1_monitoring_proto_rawDesc), len(file_monitoring_v1_monitoring_proto_rawDesc)))
	})
	return file_monitoring_v1_monitoring_proto_rawDescData
}

var file_monitoring_v1_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_monitoring_v1_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_monitoring_v1_monitoring_proto_goTypes = []any{
	(MetricType)(0),                     // 0: monitoring.v1.MetricType
	(MetricCategory)(0),                 // 1: monitoring.v1.MetricCategory
	(StorageNodeStatus)(0),              // 2: monitoring.v1.StorageNodeStatus
	(*MetricPoint)(nil),                 // 3: monitoring.v1.MetricPoint
	(*StorageNode)(nil),                 // 4: monitoring.v1.StorageNode
	(*StoreMetricPointsRequest)(nil),    // 5: monitoring.v1.StoreMetricPointsRequest
	(*StoreMetricPointsResponse)(nil),   // 6: monitoring.v1.StoreMetricPointsResponse
	(*StoreMetricProviderRequest)(nil),  // 7: monitoring.v1.StoreMetricProviderRequest
	(*StoreMetricProviderResponse)(nil), // 8: monitoring.v1.StoreMetricProviderResponse
	(*QueryMetricPointsRequest)(nil),    // 9: monitoring.v1.QueryMetricPointsRequest
	(*QueryMetricPointsResponse)(nil),   // 10: monitoring.v1.QueryMetricPointsResponse
	(*QueryTimeSeriesRequest)(nil),      // 11: monitoring.v1.QueryTimeSeriesRequest
	(*TimeSeriesPoint)(nil),             // 12: monitoring.v1.TimeSeriesPoint
	(*TimeSeries)(nil),                  // 13: monitoring.v1.TimeSeries
	(*QueryTimeSeriesResponse)(nil),     // 14: monitoring.v1.QueryTimeSeriesResponse
	(*GetStorageNodeRequest)(nil),       // 15: monitoring.v1.GetStorageNodeRequest
	(*GetStorageNodeResponse)(nil),      // 16: monitoring.v1.GetStorageNodeResponse
	nil,                                 // 17: monitoring.v1.MetricPoint.LabelsEntry
	nil,                                 // 18: monitoring.v1.QueryMetricPointsRequest.LabelMatchersEntry
	nil,                                 // 19: monitoring.v1.QueryTimeSeriesRequest.LabelMatchersEntry
	nil,                                 // 20: monitoring.v1.TimeSeries.LabelsEntry
}
var file_monitoring_v1_monitoring_proto_depIdxs = []int32{
	0,  // 0: monitoring.v1.MetricPoint.metric_type:type_name -> monitoring.v1.MetricType
	1,  // 1: monitoring.v1.MetricPoint.category:type_name -> monitoring.v1.MetricCategory
	17, // 2: monitoring.v1.MetricPoint.labels:type_name -> monitoring.v1.MetricPoint.LabelsEntry
	2,  // 3: monitoring.v1.StorageNode.status:type_name -> monitoring.v1.StorageNodeStatus
	3,  // 4: monitoring.v1.StoreMetricPointsRequest.points:type_name -> monitoring.v1.MetricPoint
	3,  // 5: monitoring.v1.StoreMetricProviderRequest.points:type_name -> monitoring.v1.MetricPoint
	1,  // 6: monitoring.v1.QueryMetricPointsRequest.categories:type_name -> monitoring.v1.MetricCategory
	18, // 7: monitoring.v1.QueryMetricPointsRequest.label_matchers:type_name -> monitoring.v1.QueryMetricPointsRequest.LabelMatchersEntry
	3,  // 8: monitoring.v1.QueryMetricPointsResponse.points:type_name -> monitoring.v1.MetricPoint
	1,  // 9: monitoring.v1.QueryTimeSeriesRequest.categories:type_name -> monitoring.v1.MetricCategory
	19, // 10: monitoring.v1.QueryTimeSeriesRequest.label_matchers:type_name -> monitoring.v1.QueryTimeSeriesRequest.LabelMatchersEntry
	20, // 11: monitoring.v1.TimeSeries.labels:type_name -> monitoring.v1.TimeSeries.LabelsEntry
	12, // 12: monitoring.v1.TimeSeries.points:type_name -> monitoring.v1.TimeSeriesPoint
	13, // 13: monitoring.v1.QueryTimeSeriesResponse.series:type_name -> monitoring.v1.TimeSeries
	4,  // 14: monitoring.v1.GetStorageNodeResponse.node:type_name -> monitoring.v1.StorageNode
	5,  // 15: monitoring.v1.MetricStorageService.StoreMetricPoints:input_type -> monitoring.v1.StoreMetricPointsRequest
	7,  // 16: monitoring.v1.MetricStorageService.StoreMetricProvider:input_type -> monitoring.v1.StoreMetricProviderRequest
	9,  // 17: monitoring.v1.MetricStorageService.QueryMetricPoints:input_type -> monitoring.v1.QueryMetricPointsRequest
	11, // 18: monitoring.v1.MetricStorageService.QueryTimeSeries:input_type -> monitoring.v1.QueryTimeSeriesRequest
	15, // 19: monitoring.v1.MetricStorageService.GetStorageNode:input_type -> monitoring.v1.GetStorageNodeRequest
	6,  // 20: monitoring.v1.MetricStorageService.StoreMetricPoints:output_type -> monitoring.v1.StoreMetricPointsResponse
	8,  // 21: monitoring.v1.MetricStorageService.StoreMetricProvider:output_type -> monitoring.v1.StoreMetricProviderResponse
	10, // 22: monitoring.v1.MetricStorageService.QueryMetricPoints:output_type -> monitoring.v1.QueryMetricPointsResponse
	14, // 23: monitoring.v1.MetricStorageService.QueryTimeSeries:output_type -> monitoring.v1.QueryTimeSeriesResponse
	16, // 24: monitoring.v1.MetricStorageService.GetStorageNode:output_type -> monitoring.v1.GetStorageNodeResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_monitoring_v1_monitoring_proto_init() }
func file_monitoring_v1_monitoring_proto_init() {
	if File_monitoring_v1_monitoring_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitoring_v1_monitoring_proto_rawDesc), len(file_monitoring_v1_monitoring_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitoring_v1_monitoring_proto_goTypes,
		DependencyIndexes: file_monitoring_v1_monitoring_proto_depIdxs,
		EnumInfos:         file_monitoring_v1_monitoring_proto_enumTypes,
		MessageInfos:      file_monitoring_v1_monitoring_proto_msgTypes,
	}.Build()
	File_monitoring_v1_monitoring_proto = out.File
	file_monitoring_v1_monitoring_proto_goTypes = nil
	file_monitoring_v1_monitoring_proto_depIdxs = nil
}
